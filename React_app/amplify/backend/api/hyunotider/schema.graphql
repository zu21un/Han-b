type User @model
@key(
  name: "byEmail",
  fields: ["email"]
  queryField: "userByEmail"
)
{
  id: ID!
  name: String!
  alarmTime: String!
  email: String!
  password: String!
  keywords: [UserKeyword] @connection(keyName: "byUserId", fields:["id"]) 
}

type UserKeyword @model
@key(
  name: "byUserId",
  fields: [ "userId", "keywordId"]
)
@key(
  name: "byKeywordId",
  fields:[ "keywordId", "userId"]
){
  id: ID!
  userId: ID!
  keywordId: ID!
  user: User! @connection(fields:["userId"])
  keyword: Keyword! @connection(fields:["keywordId"])
}

type Notification @model @searchable
{
  id: ID!
  name: String!
  content: String!
  link: String!
  date: String!
  orgId: ID!
  organization: Organization! @connection(fields:["orgId"])
  keywords: [NotiKeyword] @connection (keyName: "byNotiId", fields:["id"])
}

type NotiKeyword @model @searchable
@key(
  name: "byNotiId",
  fields: [ "notiId", "keywordId"]
)
@key(
  name: "byKeywordId",
  fields: [ "keywordId", "notiId"]
){
  id: ID!
  notiId: ID!
  keywordId: ID!
  noti: Notification! @connection(fields:["notiId"])
  keyword: Keyword! @connection(fields:["keywordId"]) 
}

type Keyword @model @searchable
{
  id: ID!
  name: String! 
  users: [UserKeyword] @connection(keyName: "byKeywordId", fields:["id"])
  notis: [NotiKeyword] @connection(keyName: "byKeywordId", fields:["id"])
}

type Organization @model
{
  id: ID!
  name: String!
}

